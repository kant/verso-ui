//    DOCS:   https://www.typescriptlang.org/docs/handbook/tsconfig-json.html
{
  "types": ["node", "@emotion/core"],
  "compilerOptions": {
    "outDir": "./dist/", //  Redirect output structure to the directory.
    "noImplicitAny": true, //  Raise error on expressions and declarations with an implied any type.
    "module": "ESNext", //  Specify module code generation.
    "target": "ES2015", //  Specify ECMAScript target version.
    "jsx": "react", //  Support JSX in .tsx files
    "allowJs": true, //  Allow JavaScript files to be compiled.
    "baseUrl": ".", //  Base directory to resolve non-relative module names: https://www.typescriptlang.org/docs/handbook/module-resolution.html#base-url
    "paths": {
      //  	List of path mapping entries for module names to locations relative to the baseUrl: https://www.typescriptlang.org/docs/handbook/module-resolution.html#path-mapping
      "@aperture-ui/theme": ["./src/themes"],
      "@aperture-ui/components": ["src/components"]
    },
    "declaration": false, //  Generates corresponding .d.ts file.
    "lib": ["dom", "dom.iterable", "es5"], //  List of library files to be included in the compilation.
    "skipLibCheck": true, //  Skip type checking of all declaration files (*.d.ts).
    "strict": true, //  Enable all strict type checking options.
    "forceConsistentCasingInFileNames": true, //  Disallow inconsistently-cased references to the same file.
    "esModuleInterop": true, //   Emit __importStar and __importDefault helpers for runtime babel ecosystem compatibility and enable --allowSyntheticDefaultImports for typesystem compatibility.
    "moduleResolution": "node", //  Determine how modules get resolved: https://www.typescriptlang.org/docs/handbook/module-resolution.html
    "isolatedModules": true, //  Perform additional checks to ensure that separate compilation (such as with transpileModule or @babel/plugin-transform-typescript) would be safe.
    "allowSyntheticDefaultImports": true // Allow default imports from modules with no default export. This does not affect code emit, just typechecking.
  },
  "include": [
    "next-env.d.ts",
    "**/*.ts",
    "**/*.tsx",
    "./src/**/*.ts",
    "./src/**/*.tsx",
    "./src/**/*",
    "./src/**/**/*"
  ],
  "exclude": ["node_modules"]
}
